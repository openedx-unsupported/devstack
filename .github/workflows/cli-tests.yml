# CLI tests: Check that various Makefile targets behave as expected
# (without going deeper into provisioning and such)

name: CLI tests

on:
  push:
    branches: [master]
  pull_request:
    branches:
      - '**'

jobs:

  run_ci:
    runs-on: ${{ matrix.os.image }}
    env:
      DEVSTACK_WORKSPACE: /tmp
      SHALLOW_CLONE: 1
      # Don't report metrics as real usage
      DEVSTACK_METRICS_TESTING: ci
    strategy:
      matrix:
        os:
          - name: linux
            image: ubuntu-20.04 # Focal Fossa
          # The virtual environment for mac10.15 is currently using a version of VirtualBox
          # that is incompatible. Commenting out the mac tests until this is addressed.
          # See https://github.com/actions/virtual-environments/issues/4466 for details
          # - name: mac
            # image: macos-10.15 # Catalina
        python-version:
          - '3.8'
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Docker installation - Linux
        if: ${{ matrix.os.name == 'linux' }}
        run: |
          docker version
          sudo apt-get update
          sudo apt install apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal test"
          sudo apt update
          sudo apt install docker-ce
          docker version
          docker-compose --version

      # Cache boot2docker for speedup and to avoid ratelimiting
      - name: Docker cache - Mac
        if: ${{ matrix.os.name == 'mac' }}
        uses: actions/cache@v2
        with:
          path: ~/.docker/machine/cache
          key: ${{ runner.os }}-docker-machine

      # Note: we have to use boot2docker because Docker Desktop has not been licensed
      # for use in GithubActions
      #
      # This also only seems to work for the CLI tests, not the
      # provisioning tests, even with apparently identical scripts.
      - name: Docker installation - Mac
        if: ${{ matrix.os.name == 'mac' }}
        run: |
          brew install docker docker-machine
          docker-machine create --driver virtualbox default
          # Apply Docker environment variables to later steps.
          #
          # However, we first have to extract just the lines beginning
          # with 'export ' (skipping any comments) and then reformat
          # them so that Github can extract the key/value pairs, that is,
          # remove the export and any quotes. This is not safe or
          # correct in the general case, but these Docker environment
          # variables shouldn't contain newlines or escape sequences.
          # This turns output like this:
          #   export DOCKER_HOST="tcp://192.168.99.100:2376"
          # into this:
          #   DOCKER_HOST=tcp://192.168.99.100:2376
          #
          # Docs on GITHUB_ENV:
          # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
          docker-machine env default | grep '^export' | sed 's/^export //' | sed 's/"//g' >> $GITHUB_ENV

      - name: Install Python dependencies
        run:  make requirements

      - name: CLI tests
        run: pytest -s ./tests/*.py
